name: Build & Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"

jobs:
  format:
    name: Source formatting check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
  clippy:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check the lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --verbose -- -D warnings
  create_release:
    needs: [clippy, format]
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.release.outputs.RELEASE_BODY }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      - name: Validate files
        run: |
          ls -l
      - name: Create release body
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          r="$(printf "$r" | tail -n +3)"
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"
          echo "::set-output name=release_body::$r"
  build:
    name: Build and release
    needs: create_release
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        target:
          [
            x86_64-apple-darwin,
            x86_64-unknown-linux-gnu,
            aarch64-unknown-linux-gnu,
            aarch64-apple-darwin,
          ]
        include:
          - target: x86_64-apple-darwin
            os: macos
          - target: x86_64-unknown-linux-gnu
            os: ubuntu
          - target: aarch64-unknown-linux-gnu
            os: ubuntu
          - target: aarch64-apple-darwin
            os: macos
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          target: ${{ matrix.target }}
      - name: Test
        run: cargo test
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: ${{ matrix.os == 'ubuntu' }}
          args: --release --bins --target ${{ matrix.target }}
      - name: Zip artifacts
        if: matrix.os == 'macos'
        run: |
          zip -m -j hello-${{ matrix.target }} target/${{ matrix.target }}/release/hello
      - name: Tar artifacts
        if: matrix.os == 'ubuntu'
        run: |
          ls target/${{ matrix.target }}/release/
          tar -czvf hello-${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release/ hello
      - name: Generate SHA256
        run: |
          shasum -a 256 hello-${{ matrix.target }}* >> checksums.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ needs.create_release.outputs.release_body }}
          files: |
            hello-${{ matrix.target }}.*
            checksums.txt

  homebrew:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Bump formulae
        uses: dawidd6/action-homebrew-bump-formula@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          formula: hello
          tap: rvigo/homebrew-hello
          tag: ${{ github.ref }}
