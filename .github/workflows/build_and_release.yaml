name: Build & Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"

jobs:
  format:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: Cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
  clippy:
    name: clippy
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true
      - name: Check the lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --verbose -- -D warnings
  build:
    name: Build
    needs: [clippy, format]
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        target:
          [
            x86_64-apple-darwin,
            aarch64-unknown-linux-gnu,
            aarch64-apple-darwin,
            x86_64-unknown-linux-gnu,
          ]

        include:
          - target: x86_64-apple-darwin
            os: macos
          - target: x86_64-unknown-linux-gnu
            os: ubuntu
          - target: aarch64-unknown-linux-gnu
            os: ubuntu
          - target: aarch64-apple-darwin
            os: macos
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          target: ${{ matrix.target }}
      - name: Cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Test
        run: cargo test
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: ${{ matrix.os == 'ubuntu' }}
          args: --release --bins --target ${{ matrix.target }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: hello-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/

  homebrew:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download darwin_arm64
        uses: actions/download-artifact@v3
        with:
          name: hello-aarch64-apple-darwin
          path: target/aarch64-apple-darwin/release/
      - name: Download darwin_amd64_v1
        uses: actions/download-artifact@v3
        with:
          name: hello-x86_64-apple-darwin
          path: target/x86_64-apple-darwin/release/
      - name: Download linux_amd64_v1
        uses: actions/download-artifact@v3
        with:
          name: hello-x86_64-unknown-linux-gnu
          path: target/x86_64-unknown-linux-gnu/release/
      - name: Download linux_arm64
        uses: actions/download-artifact@v3
        with:
          name: hello-aarch64-unknown-linux-gnu
          path: target/aarch64-unknown-linux-gnu/release/
      - name: Check file
        run: |
          ls -la target/x86_64-unknown-linux-gnu/release/
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
      - name: Release binaries
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Check Result
        run: |
          cat result.done
